fn mysql_syntax_to_pgsql(sql: &str) -> String {
  // replace ? to $1, $2, ...
  let mut sn = 1;
  let mut result = String::new();
  for c in sql.chars() {
    if c == '?' {
      result.push_str(&format!("${}", sn));
      sn += 1;
    } else {
      result.push(c);
    }
  }
  // replace "AUTO_INCREMENT" to "GENERATED BY DEFAULT AS IDENTITY" ignore case
  result = regex::Regex::new(r#"(?i)AUTO[\s_]?INCREMENT"#)
    .unwrap()
    .replace_all(&result, "GENERATED BY DEFAULT AS IDENTITY")
    .to_string();

  result
}

#[test]
fn test_mysql_syntax_to_pgsql() {
  let sql = "SELECT * FROM table WHERE id = ? AND name = ?";
  let expected = "SELECT * FROM table WHERE id = $1 AND name = $2";
  assert_eq!(mysql_syntax_to_pgsql(sql), expected);

  let sql = "CREATE TABLE table (id INT PRIMARY KEY AUTOINCREMENT)";
  let expected = "CREATE TABLE table (id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY)";
  assert_eq!(mysql_syntax_to_pgsql(sql), expected);
}
